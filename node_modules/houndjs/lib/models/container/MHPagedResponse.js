'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _jsonParse = require('../internal/jsonParse.js');

var _MHPagingInfo = require('./MHPagingInfo.js');

var _MHPagingInfo2 = _interopRequireDefault(_MHPagingInfo);

var _MHRelationalPair = require('./MHRelationalPair.js');

var _MHRelationalPair2 = _interopRequireDefault(_MHRelationalPair);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var MHPagedResponse = function () {
  function MHPagedResponse(args) {
    _classCallCheck(this, MHPagedResponse);

    this.cachedNextResponse = null;
    this.fetchNextOperation = null;

    (0, _jsonParse.jsonCreateWithArgs)(args, this);
  }

  _createClass(MHPagedResponse, [{
    key: 'fetchNext',
    value: function fetchNext() {
      var _this = this;

      var cachedResponse = this.cachedNextResponse;
      if (cachedResponse) {
        return new Promise(function (resolve) {
          resolve(cachedResponse);
        });
      }

      return this.fetchNextOperation(this.pagingInfo.next).then(function (response) {
        _this.cachedNextResponse = response;
        return response;
      });
    }
  }, {
    key: 'jsonProperties',
    get: function get() {
      return {
        content: [_MHRelationalPair2.default],
        pagingInfo: _MHPagingInfo2.default
      };
    }
  }, {
    key: 'hasMorePages',
    get: function get() {
      return this.pagingInfo.next !== undefined && this.pagingInfo.next !== null;
    }
  }]);

  return MHPagedResponse;
}();

exports.default = MHPagedResponse;