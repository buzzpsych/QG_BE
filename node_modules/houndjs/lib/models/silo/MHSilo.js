'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _MHObject = require('../base/MHObject.js');

var _MHObject2 = _interopRequireDefault(_MHObject);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var MHSilo = function () {
  function MHSilo() {
    _classCallCheck(this, MHSilo);
  }

  _createClass(MHSilo, null, [{
    key: 'fetchSuggestedSilos',
    value: function fetchSuggestedSilos(filters) {
      var view = arguments.length <= 1 || arguments[1] === undefined ? 'full' : arguments[1];
      var size = arguments.length <= 2 || arguments[2] === undefined ? 10 : arguments[2];
      var siloPageSize = arguments.length <= 3 || arguments[3] === undefined ? 10 : arguments[3];
      var promote = arguments[4];

      var path = 'graph/silo/suggested';
      var params = {
        siloPageSize: siloPageSize
      };
      if (filters) {
        params.filters = filters;
      }
      if (promote) {
        params.promote = promote;
      }
      return _MHObject2.default.fetchRootBucketedEndpoint(path, view, size, null, params);
    }
  }]);

  return MHSilo;
}();

exports.default = MHSilo;