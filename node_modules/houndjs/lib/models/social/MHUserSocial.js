'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _jsonParse = require('../internal/jsonParse.js');

var _MHRelationalPair = require('../container/MHRelationalPair.js');

var _MHRelationalPair2 = _interopRequireDefault(_MHRelationalPair);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// MediaHound User Social Object

var MHUserSocial = function () {
  function MHUserSocial(args) {
    _classCallCheck(this, MHUserSocial);

    (0, _jsonParse.jsonCreateWithArgs)(args, this);
  }

  _createClass(MHUserSocial, [{
    key: 'jsonProperties',
    get: function get() {
      return {
        'userLikes': Boolean,
        'userDislikes': Boolean,
        'userFollows': Boolean,
        'userConnected': Boolean,
        'userPreference': Boolean,
        'userDefaultCollections': [_MHRelationalPair2.default]
      };
    }
  }]);

  return MHUserSocial;
}();

exports.default = MHUserSocial;