'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _jsonParse = require('../internal/jsonParse.js');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// MediaHound Social Object

var MHSocial = function () {
  function MHSocial(args) {
    _classCallCheck(this, MHSocial);

    (0, _jsonParse.jsonCreateWithArgs)(args, this);
  }

  /**
   * TODO maybe just do a this[prop] === other[prop] check
   * @param {MHSocial} otherObj - another MHSocial object to check against
   * @returns {boolean}
   */


  _createClass(MHSocial, [{
    key: 'isEqualToMHSocial',
    value: function isEqualToMHSocial(otherObj) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = Object.keys(this.jsonProperties)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var prop = _step.value;

          if (typeof this[prop] === 'number' && typeof otherObj[prop] === 'number' && this[prop] === otherObj[prop]) {
            continue;
          } else if (!this[prop] && !otherObj[prop]) {
            continue;
          }
          return false;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return true;
    }

    /**
     * Returns a new social object with the expected change of a given action
     * @private
     * @param action - MHSocial.ACTION to take on this social object
     * @returns {MHSocial} - A new MHSocial object that represents the expected outcome
     */

  }, {
    key: 'newWithAction',
    value: function newWithAction(action) {
      var newValue,
          toChange,
          alsoFlip,
          newArgs = {};

      switch (action) {
        case MHSocial.LIKE:
          toChange = 'likers';
          newValue = this.likers + 1;
          alsoFlip = 'userLikes';
          break;
        case MHSocial.UNLIKE:
          toChange = 'likers';
          newValue = this.likers - 1;
          alsoFlip = 'userLikes';
          break;
        case MHSocial.DISLIKE:
        case MHSocial.UNDISLIKE:
          alsoFlip = 'userDislikes';
          break;
        case MHSocial.FOLLOW:
          toChange = 'followers';
          newValue = this.followers + 1;
          alsoFlip = 'userFollows';
          break;
        case MHSocial.UNFOLLOW:
          toChange = 'followers';
          newValue = this.followers - 1;
          alsoFlip = 'userFollows';
          break;
        case MHSocial.COLLECT:
          toChange = 'collectors';
          newValue = this.collectors + 1;
          break;
        default:
          break;
      }

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = Object.keys(this.jsonProperties)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var prop = _step2.value;

          if (prop === toChange) {
            newArgs[prop] = newValue;
          } else if (prop === alsoFlip) {
            newArgs[prop] = !this[prop];
          } else {
            newArgs[prop] = this[prop];
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return new MHSocial(newArgs);
    }

    /**
     * Social Action Types
     *
     */

  }, {
    key: 'jsonProperties',
    get: function get() {
      return {
        'likers': Number,
        'liking': Number,
        'followers': Number,
        'collectors': Number,
        'mentioners': Number,
        'following': Number,
        'ownedCollections': Number,
        'items': Number,
        'userLikes': Boolean,
        'userDislikes': Boolean,
        'userFollows': Boolean,
        'isFeatured': Boolean,
        'userConnected': Boolean,
        'userPreference': Boolean
      };
    }
  }], [{
    key: 'LIKE',
    get: function get() {
      return 'like';
    }
  }, {
    key: 'UNLIKE',
    get: function get() {
      return 'unlike';
    }
  }, {
    key: 'DISLIKE',
    get: function get() {
      return 'dislike';
    }
  }, {
    key: 'UNDISLIKE',
    get: function get() {
      return 'undislike';
    }
  }, {
    key: 'FOLLOW',
    get: function get() {
      return 'follow';
    }
  }, {
    key: 'UNFOLLOW',
    get: function get() {
      return 'unfollow';
    }
  }, {
    key: 'SOCIAL_ACTIONS',
    get: function get() {
      return [MHSocial.LIKE, MHSocial.UNLIKE, MHSocial.DISLIKE, MHSocial.UNDISLIKE, MHSocial.FOLLOW, MHSocial.UNFOLLOW];
    }
  }, {
    key: 'POST',
    get: function get() {
      return 'post';
    }
  }, {
    key: 'COLLECT',
    get: function get() {
      return 'collect';
    }
  }, {
    key: 'COMMENT',
    get: function get() {
      return 'comment';
    }
  }]);

  return MHSocial;
}();

exports.default = MHSocial;