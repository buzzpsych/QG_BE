'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _jsonParse = require('../internal/jsonParse.js');

var _MHSourceFormat = require('./MHSourceFormat.js');

var _MHSourceFormat2 = _interopRequireDefault(_MHSourceFormat);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// MediaHound SourceMethod Object

var MHSourceMethod = function () {
  function MHSourceMethod(args) {
    _classCallCheck(this, MHSourceMethod);

    (0, _jsonParse.jsonCreateWithArgs)(args, this);
  }

  _createClass(MHSourceMethod, [{
    key: 'formatForType',
    value: function formatForType(type) {
      return this.formats.filter(function (format) {
        return format.type === type;
      })[0];
    }
  }, {
    key: 'jsonProperties',
    get: function get() {
      return {
        type: String,
        formats: [_MHSourceFormat2.default]
      };
    }
  }], [{
    key: 'TYPE_PURCHASE',
    get: function get() {
      return 'purchase';
    }
  }, {
    key: 'TYPE_RENTAL',
    get: function get() {
      return 'rental';
    }
  }, {
    key: 'TYPE_SUBSCRIPTION',
    get: function get() {
      return 'subscription';
    }
  }, {
    key: 'TYPE_ADSUPPORTED',
    get: function get() {
      return 'adSupported';
    }
  }]);

  return MHSourceMethod;
}();

exports.default = MHSourceMethod;