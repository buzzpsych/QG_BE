{
  "_args": [
    [
      {
        "raw": "react-accessible-accordion",
        "scope": null,
        "escapedName": "react-accessible-accordion",
        "name": "react-accessible-accordion",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/evan/Desktop/Quote-Generator"
    ]
  ],
  "_from": "react-accessible-accordion@latest",
  "_id": "react-accessible-accordion@1.0.2",
  "_inCache": true,
  "_location": "/react-accessible-accordion",
  "_nodeVersion": "8.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-accessible-accordion-1.0.2.tgz_1511818329826_0.4212432836648077"
  },
  "_npmUser": {
    "name": "vincentaudebert",
    "email": "vincent.audebert@yahoo.fr"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-accessible-accordion",
    "scope": null,
    "escapedName": "react-accessible-accordion",
    "name": "react-accessible-accordion",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-accessible-accordion/-/react-accessible-accordion-1.0.2.tgz",
  "_shasum": "fcddd3f0aa19011b2d9dfb07e924f6126c12ccdb",
  "_shrinkwrap": null,
  "_spec": "react-accessible-accordion",
  "_where": "/Users/evan/Desktop/Quote-Generator",
  "authors": [
    "Vincent Audebert <vincent@springload.co.nz>"
  ],
  "babel": {
    "presets": [
      "es2015",
      "react",
      "stage-2"
    ]
  },
  "bugs": {
    "url": "https://github.com/springload/react-accessible-accordion/issues"
  },
  "contributors": [
    {
      "name": "Mitch Ryan",
      "url": "https://github.com/ryami333"
    },
    {
      "name": "Samantha Sanders"
    },
    {
      "name": "Thibaud Colas"
    }
  ],
  "dependencies": {
    "classnames": "^2.2.5",
    "consecutive": "^5.0.4"
  },
  "description": "Accessible Accordion component for React",
  "devDependencies": {
    "babel-cli": "^6.24.0",
    "babel-eslint": "^8.0.1",
    "babel-loader": "^7.1.2",
    "babel-preset-es2015": "^6.24.0",
    "babel-preset-react": "^6.23.0",
    "babel-preset-stage-2": "^6.24.1",
    "coveralls": "^3.0.0",
    "css-loader": "^0.28.7",
    "eslint": "^4.8.0",
    "eslint-config-airbnb": "^15.1.0",
    "eslint-config-prettier": "^2.6.0",
    "eslint-plugin-flowtype": "^2.36.0",
    "eslint-plugin-flowtype-errors": "^3.3.2",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-jsx-a11y": "^5.1.1",
    "eslint-plugin-react": "^7.4.0",
    "flow-bin": "^0.56.0",
    "jest": "^21.2.1",
    "prettier": "^1.7.3",
    "react": "^16.0.0",
    "react-dom": "^16.0.0",
    "react-test-renderer": "^16.0.0",
    "style-loader": "^0.18.2",
    "webpack": "^3.6.0",
    "webpack-dev-server": "^2.4.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-fcqSVv8V5hkvyLjNbxk3M4I9lyfmyRYWZE6SG44/RtrzSvf/DYaOP+X/+rb0EzFJZAumDzZPAu1Ruxq6EMiBfg==",
    "shasum": "fcddd3f0aa19011b2d9dfb07e924f6126c12ccdb",
    "tarball": "https://registry.npmjs.org/react-accessible-accordion/-/react-accessible-accordion-1.0.2.tgz"
  },
  "gitHead": "41a8a6337aa221b05fe6ac5bebde8c1bea044ee3",
  "homepage": "https://github.com/springload/react-accessible-accordion#readme",
  "jest": {
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/dist/"
    ]
  },
  "keywords": [
    "react",
    "component",
    "accordion",
    "collapse",
    "accessible",
    "accessibility"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "ryami333",
      "email": "mitch.ryan@outlook.co.nz"
    },
    {
      "name": "samanthaksanders",
      "email": "samantha.k.sanders@gmail.com"
    },
    {
      "name": "thibaudcolas",
      "email": "thibaudcolas@gmail.com"
    },
    {
      "name": "vincentaudebert",
      "email": "vincent.audebert@yahoo.fr"
    }
  ],
  "name": "react-accessible-accordion",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.4.0 || ^16.0.0",
    "react-dom": "^15.4.0 || ^16.0.0"
  },
  "readme": "[react-accessible-accordion](https://springload.github.io/react-accessible-accordion/) [![npm](https://img.shields.io/npm/v/react-accessible-accordion.svg?style=flat-square)](https://www.npmjs.com/package/react-accessible-accordion) [![Build Status](https://travis-ci.org/springload/react-accessible-accordion.svg?branch=master)](https://travis-ci.org/springload/react-accessible-accordion) [![Coverage Status](https://coveralls.io/repos/github/springload/react-accessible-accordion/badge.svg)](https://coveralls.io/github/springload/react-accessible-accordion) [![Dependency Status](https://david-dm.org/springload/react-accessible-accordion.svg?style=flat-square)](https://david-dm.org/springload/react-accessible-accordion) [![devDependency Status](https://david-dm.org/springload/react-accessible-accordion/dev-status.svg?style=flat-square)](https://david-dm.org/springload/react-accessible-accordion#info=devDependencies)\n[![Accessibility status](https://img.shields.io/badge/a11y-tested-brightgreen.svg)](http://wave.webaim.org/report#/https://springload.github.io/react-accessible-accordion/)\n=========\n\n> Accessible Accordion component for React. Inspired by [rc-collapse](https://github.com/react-component/collapse) and [react-sanfona](https://github.com/daviferreira/react-sanfona). :mag::ok_hand:\n\nThis is a work in progress. Feel free to contribute. [Try a demo now](https://springload.github.io/react-accessible-accordion/).\n\nIf you like accessible components, feel free to check this other repo [react-accessible-modal](https://github.com/springload/react-accessible-modal).\n\n## Usage\n\nFirst, grab the package from npm:\n\n```sh\nnpm install --save react-accessible-accordion\n# react-accessible-accordion's peerDependencies:\nnpm install --save react@^15.0.0 react-dom@^15.0.0\n```\n\nThen, import the editor and use it in your code. Here is a [basic example](https://springload.github.io/react-accessible-accordion/):\n\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemTitle,\n    AccordionItemBody,\n} from 'react-accessible-accordion';\n\nimport './node_modules/react-accessible-accordion/dist/react-accessible-accordion.css';\n\nconst Example = () => (\n    <Accordion>\n        <AccordionItem>\n            <AccordionItemTitle>\n                <h3>Simple title</h3>\n            </AccordionItemTitle>\n            <AccordionItemBody>\n                <p>\n                    Body content\n                </p>\n            </AccordionItemBody>\n        </AccordionItem>\n        <AccordionItem>\n            <AccordionItemTitle>\n                <h3>Complex title</h3>\n                <div>With a bit of description</div>\n            </AccordionItemTitle>\n            <AccordionItemBody>\n                <p>\n                    Body content\n                </p>\n            </AccordionItemBody>\n        </AccordionItem>\n    </Accordion>\n);\n\nReactDOM.render(<Example />, document.querySelector('[data-mount]'));\n```\n\n## API\n\n### Accordion\n\n#### props:\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n    <tr>\n        <th style=\"width: 100px;\">name</th>\n        <th style=\"width: 50px;\">type</th>\n        <th>default</th>\n        <th>description</th>\n    </tr>\n    </thead>\n    <tbody>\n      <tr>\n          <td>accordion</td>\n          <td>Boolean</td>\n          <td>true</td>\n          <td>Open only one item at a time or not</td>\n      </tr>\n      <tr>\n          <td>onChange</td>\n          <td>Function(keys)</td>\n          <td>noop</td>\n          <td>Triggered on change (open/close items)</td>\n      </tr>\n      <tr>\n          <td>className</td>\n          <td>String</td>\n          <td>accordion</td>\n          <td>CSS class(es) applied to the component</td>\n      </tr>\n      <tr>\n          <td>activeItems</td>\n          <td>Array</td>\n          <td>[]</td>\n          <td>Indexes (or custom keys) to pre expand items. Can be changed dynamically. Doesn't have the priority against `AccordionItem - expanded` on first render.</td>\n      </tr>\n    </tbody>\n</table>\n\n### AccordionItem\n\n#### props:\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n    <tr>\n        <th style=\"width: 100px;\">name</th>\n        <th style=\"width: 50px;\">type</th>\n        <th>default</th>\n        <th>description</th>\n    </tr>\n    </thead>\n    <tbody>\n      <tr>\n          <td>expanded</td>\n          <td>Boolean</td>\n          <td>false</td>\n          <td>Expands this item on first render</td>\n      </tr>\n      <tr>\n          <td>className</td>\n          <td>String</td>\n          <td>accordion__item</td>\n          <td>CSS class(es) applied to the component</td>\n      </tr>\n      <tr>\n          <td>hideBodyClassName</td>\n          <td>String</td>\n          <td>null</td>\n          <td>Class name for hidden body state</td>\n      </tr>\n      <tr>\n          <td>customKey</td>\n          <td>String</td>\n          <td></td>\n          <td>Custom key to be used as a reference in `Accordion - activeItems`</td>\n        </tr>\n    </tbody>\n</table>\n\n### AccordionItemTitle\n\n#### props:\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n    <tr>\n        <th style=\"width: 100px;\">name</th>\n        <th style=\"width: 50px;\">type</th>\n        <th>default</th>\n        <th>description</th>\n    </tr>\n    </thead>\n    <tbody>\n      <tr>\n          <td>className</td>\n          <td>String</td>\n          <td>accordion__title</td>\n          <td>CSS class(es) applied to the component</td>\n      </tr>\n      <tr>\n          <td>hideBodyClassName</td>\n          <td>String</td>\n          <td>null</td>\n          <td>Class name for hidden body state</td>\n      </tr>\n    </tbody>\n</table>\n\n### AccordionItemBody\n\n#### props:\n\n<table class=\"table table-bordered table-striped\">\n    <thead>\n    <tr>\n        <th style=\"width: 100px;\">name</th>\n        <th style=\"width: 50px;\">type</th>\n        <th>default</th>\n        <th>description</th>\n    </tr>\n    </thead>\n    <tbody>\n      <tr>\n          <td>className</td>\n          <td>String</td>\n          <td>accordion__body</td>\n          <td>CSS class(es) applied to the component</td>\n      </tr>\n      <tr>\n          <td>hideBodyClassName</td>\n          <td>String</td>\n          <td>accordion__body--hidden</td>\n          <td>Class name for hidden body state</td>\n      </tr>\n    </tbody>\n</table>\n\n## Accessibility\n\n### What this project is doing accessibility-wise?\n\nThis project manages two types of Accordions, with single or multiple items open.\n\n#### Single item\n\n> Use this with with props `accordion` set to `true` on `Accordion`.\n\nFor this type of Accordion, you will get the following `role` set up on your elements:\n\n- Accordion: `tablist`\n- AccordionItem: no specific role\n- AccordionItemTitle: `tab`\n- AccordionItemBody: `tabpanel`\n\n#### Multiple items\n\nFor this type of Accordion, you will get the following `role` set up on your elements:\n\n> Use this with with props `accordion` set to `false` on `Accordion`.\n\n- Accordion: no specific role\n- AccordionItem: no specific role\n- AccordionItemTitle: `button`\n- AccordionItemBody: no specific role\n\n## Development\n\n### Install\n\n> Clone the project on your computer, and install [Node](https://nodejs.org). This project also uses [nvm](https://github.com/springload/frontend-starter-kit/blob/master/docs/useful-tooling.md#nvm).\n\n```sh\nnvm install\n# Then, install all project dependencies.\nnpm install\n# Install the git hooks.\n./.githooks/deploy\n# Set up a `.env` file with the appropriate secrets.\ntouch .env\n```\n\n### Working on the project\n\n> Everything mentioned in the installation process should already be done.\n\n```sh\n# Make sure you use the right node version.\nnvm use\n# Start the the development tools in watch mode.\nnpm run start\n# Runs linting.\nnpm run lint\n# Runs tests.\nnpm run test\n# View other available commands with:\nnpm run\n```\n\n### Run the demo\n\n> Everything mentioned in the installation process should already be done.\n\n```sh\n# Make sure you use the right node version.\nnvm use\n# Start the server and the development tools.\nnpm run start-demo\n```\n\n### Publish\n\n```sh\nnpm version [TYPE]\ngit push origin master --tags\nnpm publish\n```\n\n\n# Browser support\n\n**Supported browser / device versions:**\n\n| Browser | Device/OS | Version | Notes |\n|---------|-----------|---------|-------|\n| Mobile Safari | iOS | latest ||\n| Chrome | Android | latest ||\n| IE | Windows | 11 ||\n| MS Edge | Windows | latest ||\n| Chrome | Desktop | latest ||\n| Firefox | Desktop | latest ||\n| Safari | OSX | latest ||\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/springload/react-accessible-accordion.git"
  },
  "scripts": {
    "build": "npm run js -s && npm run css -s",
    "coveralls": "cat ./coverage/lcov.info | coveralls",
    "css": "cp src/react-accessible-accordion.css dist",
    "deploy": "npm run pages && ./bin/deploy.sh",
    "js": "babel -d dist src",
    "js:watch": "npm run js -- --watch",
    "lint": "eslint .",
    "pages": "rm -rf pages && cp -R demo pages && webpack --config=./webpack/webpack.config.pages.js",
    "prepublish": "npm run build",
    "prettier": "prettier **/*.js --write",
    "start": "npm run js:watch",
    "start-demo": "webpack-dev-server --config ./webpack/webpack.config.demo.js",
    "test": "jest",
    "test:coverage": "jest --coverage",
    "test:coverage:watch": "jest --coverage --watch",
    "test:watch": "jest --watch"
  },
  "version": "1.0.2"
}
